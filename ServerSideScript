-- Trust Me I Can't Make It Better Than This.

--==== Service Initialization ====--
local services = {
    Debris = game:GetService("Debris"),
    DS = game:GetService("DataStoreService"),
    TS = game:GetService("TweenService"),
    Pathfinding = game:GetService("PathfindingService"),
    REvents = game.ReplicatedStorage.RemoteEvents
}
services.DataStoreMain = services.DS:GetDataStore("Main")
services.AnimInstance = Instance.new("Animation")
services.AnimInstance.AnimationId = "rbxassetid://106938228468653"
services.AnimInstance.Parent = workspace

--==== Utility Module ====--
local Utilities = {}

function Utilities.SendResponse(player, message)
    if player and player:IsDescendantOf(game.Players) then
        services.REvents.ServerMessage:FireClient(player, message)
    end
end

function Utilities.ValidateNumber(input, min, max)
    local num = tonumber(input)
    return num and (not min or num >= min) and (not max or num <= max)
end

function Utilities.CreatePart(cframe, props)
    local part = Instance.new("Part")
    part.CFrame = cframe
    part.Size = props.Size or Vector3.new(5,5,5)
    part.Color = props.Color or Color3.new(1,1,1)
    part.Material = Enum.Material.SmoothPlastic
    part.Anchored = props.Anchored or false
    part.CanCollide = props.CanCollide or false
    part.Shape = props.Shape or Enum.PartType.Block
    part.Parent = workspace
    return part
end

--==== Physics Module ====--
local Physics = {}

function Physics.ApplyVelocity(parent, attachment, velocity, duration)
    local linearVelocity = Instance.new("LinearVelocity")
    linearVelocity.Attachment0 = attachment
    linearVelocity.VectorVelocity = velocity
    linearVelocity.MaxForce = math.huge
    linearVelocity.Parent = parent
    services.Debris:AddItem(linearVelocity, duration or 2)
end

function Physics.CreateExplosion(position)
    local explosion = Instance.new("Explosion")
    explosion.Position = position
    explosion.BlastRadius = 15
    explosion.Parent = workspace
    return explosion
end

--==== Character Module ====--
local Character = {}

function Character.Ragdoll(humanoid)
    for _, joint in ipairs(humanoid.Parent:GetDescendants()) do
        if joint:IsA("Motor6D") then
            local att0 = Instance.new("Attachment")
            local att1 = Instance.new("Attachment")
            att0.CFrame = joint.C0
            att1.CFrame = joint.C1
            
            local constraint = Instance.new("BallSocketConstraint")
            constraint.Attachment0 = att0
            constraint.Attachment1 = att1
            constraint.TwistLimitsEnabled = true
            
            att0.Parent = joint.Part0
            att1.Parent = joint.Part1
            constraint.Parent = joint.Parent
            joint.Enabled = false
        end
    end
    services.REvents.SetHumanState:FireClient(
        game.Players:GetPlayerFromCharacter(humanoid.Parent),
        Enum.HumanoidStateType.Physics
    )
end

function Character.ScaleR15(humanoid, scale)
    if humanoid.RigType == Enum.HumanoidRigType.R15 then
        for _, value in ipairs(humanoid:GetChildren()) do
            if value:IsA("NumberValue") then
                value.Value = scale
            end
        end
    end
end

--==== Command Implementations ====--
local Commands = {}

function Commands.die(player)
    player.Character.Humanoid.Health = 0
end

function Commands.grav(player, arg)
    if Utilities.ValidateNumber(arg, 1) then
        workspace.Gravity = tonumber(arg)
        Utilities.SendResponse(player, "Gravity set to: "..arg)
    end
end

function Commands.teleport(player, arg)
    if Utilities.ValidateNumber(arg, 1) then
        local range = tonumber(arg)
        local offset = Vector3.new(
            math.random(-range, range),
            0,
            math.random(-range, range)
        )
        player.Character:PivotTo(player.Character.HumanoidRootPart.CFrame + offset)
    end
end

function Commands.run(player)
    local rootPart = player.Character.HumanoidRootPart
    Physics.ApplyVelocity(
        rootPart,
        rootPart.RootAttachment,
        rootPart.CFrame.LookVector * 40
    )
end

function Commands.part(player)
    Utilities.CreatePart(
        player.Character.HumanoidRootPart.Position + Vector3.new(0,3,0),
        {
            Color = Color3.fromRGB(
                math.random(255),
                math.random(255),
                math.random(255)
            ),
            Anchored = true
        }
    )
end

function Commands.savelast(player)
    services.DataStoreMain:SetAsync("LastVisitor", player.Name)
    Utilities.SendResponse(player, "Saved as last visitor!")
end

function Commands.displaylast(player)
    local last = services.DataStoreMain:GetAsync("LastVisitor") or "None"
    Utilities.SendResponse(player, "Last visitor: "..last)
end

function Commands.wave(player)
    local animator = player.Character.Humanoid.Animator
    local animation = animator:LoadAnimation(services.AnimInstance)
    animation:Play()
end

function Commands.ragdoll(player)
    Character.Ragdoll(player.Character.Humanoid)
end

function Commands.meteor()
    for _ = 1,20 do
        local meteor = Utilities.CreatePart(
            CFrame.new(
                math.random(-250,250),
                200,
                math.random(-250,250)
            ),
            {
                Color = Color3.fromRGB(255, 149, 0),
                Anchored = false
            }
        )
        
        Physics.ApplyVelocity(
            meteor,
            meteor:WaitForChild("Attachment"),
            Vector3.new(0, math.random(-125, -75), 0),
            4.5
        )

        meteor.Touched:Once(function()
            Physics.CreateExplosion(meteor.Position)
            meteor:Destroy()
        end)
    end
end

function Commands.orbit(player)
    local rootPart = player.Character.HumanoidRootPart
    local orbitals = {}
    local radius = 10

    for _ = 1,5 do
        local orb = Utilities.CreatePart(rootPart.CFrame, {
            Size = Vector3.new(3,3,3),
            Color = Color3.new(1,0,0),
            Shape = Enum.PartType.Ball,
            Anchored = true,
            CanCollide = false
        })
        table.insert(orbitals, orb)
        services.Debris:AddItem(orb, 7.5)
    end

    task.spawn(function()
        local angle = 0
        while #orbitals > 0 do
            for i, orb in ipairs(orbitals) do
                if not orb.Parent then
                    table.remove(orbitals, i)
                    break
                end
                
                local offset = Vector3.new(
                    math.cos(angle + (i-1)*(math.pi*2/#orbitals)) * radius,
                    0,
                    math.sin(angle + (i-1)*(math.pi*2/#orbitals)) * radius
                )
                orb.Position = rootPart.Position + offset
            end
            angle += 0.025
            task.wait(0.01)
        end
    end)
end

function Commands.settime(player, arg)
    local timeMap = {
        morning = 8, noon = 12, afternoon = 16,
        evening = 19, midnight = 0, dawn = 6
    }
    if timeMap[arg] then
        game.Lighting.TimeOfDay = timeMap[arg]
        Utilities.SendResponse(player, "Time set to: "..arg)
    end
end

function Commands.size(player, arg)
    if Utilities.ValidateNumber(arg, 0.1, 10) then
        Character.ScaleR15(player.Character.Humanoid, tonumber(arg))
        Utilities.SendResponse(player, "Scaled to: "..arg)
    else
        Utilities.SendResponse(player, "Invalid scale (0.1-10)")
    end
end

function Commands.followers(player, arg)
    if not Utilities.ValidateNumber(arg, 1, 20) then return end
    
    local function CreateFollower()
        local npc = game.Players:CreateHumanoidModelFromUserId(26266254)
        npc.Parent = workspace
        npc:PivotTo(CFrame.new(math.random(-250,250), 0, math.random(-250,250)))
        
        local path = services.Pathfinding:CreatePath()
        local humanoid = npc.Humanoid
        
        humanoid.Touched:Connect(function(hit)
            if hit.Parent:FindFirstChild("Humanoid") then
                hit.Parent.Humanoid:TakeDamage(100)
            end
        end)

        task.spawn(function()
            while npc.Parent and player.Character do
                path:ComputeAsync(npc.HumanoidRootPart.Position, 
                    player.Character.HumanoidRootPart.Position)
                local waypoints = path:GetWaypoints()
                humanoid:MoveTo(waypoints[3] and waypoints[3].Position or 
                    player.Character.HumanoidRootPart.Position)
                task.wait(0.5)
            end
        end)

        services.Debris:AddItem(npc, 15)
    end

    for _ = 1,tonumber(arg) do CreateFollower() end
end

function Commands.agemeta(player, arg)
    local prototype = { Age = 21 }
    local meta = { __index = prototype }
    local data = setmetatable({}, meta)
    
    Utilities.SendResponse(player, "Initial age: "..data.Age)
    if Utilities.ValidateNumber(arg, 0, 150) then
        data.Age = tonumber(arg)
        Utilities.SendResponse(player, "New age: "..data.Age)
    end
end

function Commands.wraptime(player)
    local shockwave = Utilities.CreatePart(
        player.Character.HumanoidRootPart.Position,
        {
            Size = Vector3.new(0,0,0),
            Color = Color3.new(1,1,1),
            Anchored = true,
            CanCollide = false,
            Shape = Enum.PartType.Ball
        }
    )
    shockwave.Transparency = 0.5
    
    services.TS:Create(shockwave, TweenInfo.new(5), {
        Size = Vector3.new(200,200,200),
        Transparency = 1
    }):Play()

    local blur = Instance.new("BlurEffect")
    blur.Size = 15
    blur.Parent = game.Lighting
    services.TS:Create(blur, TweenInfo.new(5), {Size = 0}):Play()

    local humanoid = player.Character.Humanoid
    humanoid.JumpPower = 75
    workspace.Gravity = 30
    
    task.wait(8)
    workspace.Gravity = 196.2
    if humanoid then humanoid.JumpPower = 50 end
    
    services.Debris:AddItem(shockwave, 5)
    services.Debris:AddItem(blur, 5)
end

--==== Command Processor ====--
game.Players.PlayerAdded:Connect(function(player)
    player.Chatted:Connect(function(msg)
        if msg:sub(1,1) ~= "/" then return end
        
        local commandParts = string.split(msg:sub(2):lower(), " ")
        local command = commandParts[1]
        local arg = commandParts[2]

        if Commands[command] then
            task.spawn(function()
                Commands[command](player, arg)
            end)
        end
    end)
end)
